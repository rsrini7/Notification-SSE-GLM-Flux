apiVersion: v1
kind: ConfigMap
metadata:
  name: broadcast-config
  namespace: broadcast-system
data:
  # Application Configuration
  application.yml: |
    server:
      port: 8080
      servlet:
        context-path: /api
    
    spring:
      application:
        name: broadcast-microservice
      
      # h2 Database Configuration
      datasource:
        url: jdbc:h2:mem:broadcastdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL
        driver-class-name: org.h2.Driver
        username: sa
        password: password
      h2:
        console:
          enabled: true
          path: /h2-console
      
      # SQL Initialization
      sql:
        init:
          mode: always
          schema-locations: classpath:sql/schema.sql
          data-locations: classpath:sql/data.sql
      
      # Kafka Configuration
      kafka:
        bootstrap-servers: kafka-service:9092
        producer:
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
          acks: all
          retries: 3
          properties:
            enable.idempotence: true
            max.in.flight.requests.per.connection: 5
        consumer:
          key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          group-id: broadcast-service-group
          auto-offset-reset: earliest
          properties:
            spring.json.trusted.packages: "*"
            max.poll.records: 500
            fetch.max.wait.ms: 1000
        listener:
          ack-mode: manual_immediate
          concurrency: 3
      
      # Jackson Configuration
      jackson:
        serialization:
          write-dates-as-timestamps: false
        time-zone: UTC

    # Management and Monitoring
    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus
      endpoint:
        health:
          show-details: always
        prometheus:
          enabled: true
      metrics:
        export:
          prometheus:
            enabled: true
        tags:
          application: broadcast-microservice
        distribution:
          percentiles-histogram:
            http.server.requests: true
          percentiles:
            http.server.requests: 0.5,0.95,0.99

    # Logging Configuration
    logging:
      level:
        com.example.broadcast: INFO
        org.springframework.kafka: INFO
        org.springframework.web: INFO
        org.springframework.jdbc: INFO
      pattern:
        console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
      file:
        name: /var/log/broadcast-microservice.log

    # Custom Configuration
    broadcast:
      # SSE Configuration
      sse:
        timeout: 300000
        heartbeat-interval: 30000
      
      # Caffeine Cache Configuration
      cache:
        user-connections:
          maximum-size: 50000
          expire-after-write: 1h
        user-messages:
          maximum-size: 100000
          expire-after-write: 24h
      
      # Database Configuration
      db:
        batch-size: 1000
        connection-pool-size: 50
      
      # Kafka Configuration
      kafka:
        topic:
          name: broadcast-events
          partitions: 10
          replication-factor: 3
        retry:
          max-attempts: 3
          backoff-delay: 1000

  # Logback Configuration
  logback.xml: |
    <configuration>
        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
            </encoder>
        </appender>

        <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>/var/log/broadcast-microservice.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>/var/log/broadcast-microservice.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>30</maxHistory>
            </rollingPolicy>
            <encoder>
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
            </encoder>
        </appender>

        <root level="INFO">
            <appender-ref ref="STDOUT" />
            <appender-ref ref="FILE" />
        </root>

        <logger name="com.example.broadcast" level="DEBUG" additivity="false">
            <appender-ref ref="STDOUT" />
            <appender-ref ref="FILE" />
        </logger>

        <logger name="org.springframework.kafka" level="INFO" additivity="false">
            <appender-ref ref="STDOUT" />
            <appender-ref ref="FILE" />
        </logger>
    </configuration>