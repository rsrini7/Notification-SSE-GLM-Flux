apiVersion: apps/v1
kind: Deployment
metadata:
  name: broadcast-microservice
  namespace: broadcast-system
  labels:
    app: broadcast-microservice
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: broadcast-microservice
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: broadcast-microservice
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/api/actuator/prometheus"
    spec:
      serviceAccountName: broadcast-service-account
      containers:
      - name: broadcast-microservice
        image: broadcast-microservice:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8081
          name: api
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: BROADCAST_POD_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: JAVA_OPTS
          value: "-Xms2g -Xmx4g -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:ParallelGCThreads=4 -XX:ConcGCThreads=2"
        - name: SPRING_PROFILES_ACTIVE
          value: "k8s,redis"
        resources:
          requests:
            memory: "3Gi"
            cpu: "1000m"
          limits:
            memory: "5Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /api/actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: config-volume
          mountPath: /config
        - name: logs
          mountPath: /var/log
      volumes:
      - name: config-volume
        configMap:
          name: broadcast-config
      - name: logs
        emptyDir: {}
      terminationGracePeriodSeconds: 60
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - broadcast-microservice
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "broadcast-node"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      nodeSelector:
        node-role.kubernetes.io/worker: "true"