graph TD
    subgraph "User & Admin UI"
        AdminUser[Admin User]
        ReactUI[React Frontend App]
    end
    
    subgraph "Admin Service (broadcast-admin-service)"
        AdminController[Admin API Controller]
        LifecycleService[Broadcast Lifecycle Service]
        DltListener[DLT Consumer Service]
        
        subgraph "Schedulers (run on one pod)"
            OutboxPoller["Outbox Polling Service<br/>(every 2s)"]
            SchedulingService["Scheduled Broadcast Service<br/>(every 1m)"]
            ExpirationService["Broadcast Expiration Service<br/>(every 1m)"]
        end
    end
    
    subgraph "User Service (broadcast-user-service)"
        UserController[User API & SSE Controller]
        KafkaConsumer[Kafka Message Consumer]
        SseService[SSE Service & Connection Manager]
    end
    
    subgraph "Shared Infrastructure"
        Kafka[("Kafka Broker<br/>- broadcast-events-selected<br/>- broadcast-events-group<br/>- ...-dlt")]
        PostgresDB[("PostgreSQL DB<br/>- broadcast_messages<br/>- user_broadcast_messages<br/>- outbox_events<br/>- dlt_messages")]
        RedisCache[("Redis Cache<br/>- online-users<br/>- pending-events<br/>- user-msg:userId")]
    end
    
    %% Styles for clarity
    classDef userStyle fill:#d4edff,stroke:#333
    classDef adminService fill:#fff2cc,stroke:#333
    classDef userService fill:#e2f0d9,stroke:#333
    classDef kafka fill:#cce5ff,stroke:#333
    classDef postgres fill:#d6d8db,stroke:#333
    classDef redis fill:#f5c6cb,stroke:#333
    
    class AdminUser,ReactUI userStyle
    class AdminController,LifecycleService,DltListener,OutboxPoller,SchedulingService,ExpirationService adminService
    class UserController,KafkaConsumer,SseService userService
    class Kafka kafka
    class PostgresDB postgres
    class RedisCache redis
    
    %% PRIMARY FLOW: IMMEDIATE BROADCAST
    AdminUser -->|1- Creates Broadcast| ReactUI
    ReactUI -->|2- POST /api/admin/broadcasts| AdminController
    AdminController --> LifecycleService
    LifecycleService -->|3- DB Transaction| PostgresDB
    OutboxPoller -->|4- Polls & Locks Events| PostgresDB
    OutboxPoller -->|5- Publishes CREATED Event| Kafka
    Kafka -->|6- Delivers Event| KafkaConsumer
    KafkaConsumer -->|7- Checks Online Status| RedisCache
    KafkaConsumer -->|8a- Forwards to SSE Service| SseService
    SseService -->|9a- Pushes Message via SSE| ReactUI
    SseService -->|Updates Status to DELIVERED| PostgresDB
    KafkaConsumer -->|8b- Caches Pending Event| RedisCache
    
    %% SECONDARY FLOWS
    ReactUI -->|A- DELETE broadcasts Cancel| AdminController
    AdminController --> LifecycleService
    LifecycleService -->|Publishes CANCELLED Event via Outbox| OutboxPoller
    KafkaConsumer --> SseService
    
    ReactUI -->|B- POST messages read| UserController
    UserController -->|Updates DB creates Outbox event| PostgresDB
    OutboxPoller -->|Publishes READ Event| Kafka
    KafkaConsumer -->|Pushes READ_RECEIPT via SSE| SseService
    
    KafkaConsumer -->|C- Message Processing Fails| Kafka
    Kafka -->|Routes to DLT| DltListener
    DltListener -->|Consumes from DLT stores in DB| PostgresDB
    
    SchedulingService -->|D- Activates due broadcasts| PostgresDB
    ExpirationService -->|E- Expires old broadcasts| PostgresDB