graph TD
    subgraph "User Action"
        AdminUI[Admin UI]
    end

    subgraph "1. Creation & Triage (Admin Service)"
        AdminAPI["API Layer"]
        LifecycleSvc["BroadcastLifecycleService"]
        CreationTriage{"Broadcast Type?"}
    end

    subgraph "2. Async Pre-computation (Admin Service)"
        PrecomputationScheduler["Precomputation Scheduler<br/>(Every 1 min)"]
        AsyncPrecomputation["Async TargetingService<br/>(Fan-out on Write)"]
    end
    
    subgraph "3. Activation (Admin Service)"
        ActivationScheduler["Activation Scheduler<br/>(Every 1 min)"]
    end

    subgraph "4. Publishing (Admin Service)"
        OutboxPoller["Outbox Polling Service<br/>(Every 2s)"]
    end

    subgraph "5. Delivery (User Service & Infra)"
        OrchestratorConsumer["Orchestrator Consumer (Kafka)"]
        WorkerCqListener["Worker CqListener (Geode)"]
        SseService["SSE Service"]
        Kafka["Kafka (Orchestration Topic)"]
        Geode["Geode (Cache & Eventing)"]
        Postgres["PostgreSQL DB"]
        User[User Browser]
    end
    
    %% --- FLOW START ---
    AdminUI --> AdminAPI --> LifecycleSvc --> CreationTriage

    %% --- PATH A: IMMEDIATE BROADCASTS ---
    CreationTriage -- "Immediate" --> ImmediateType{"Targeting Strategy?"}
    ImmediateType -- "Early Fan-out (SELECTED)" --> SaveActiveAndOutboxBatch["DB: status=ACTIVE<br/>BATCH INSERT N events into outbox_events"]
    ImmediateType -- "Fan-out on Read (ALL/ROLE)" --> SaveActiveAndOutboxSingle["DB: status=ACTIVE<br/>INSERT ONE event into outbox_events"]
    ImmediateType -- "Fan-out on Write (PRODUCT)" --> SavePreparing["DB: status=PREPARING"]
    
    SavePreparing -- "Triggers" --> AsyncPrecomputation

    %% --- PATH B: SCHEDULED BROADCASTS ---
    CreationTriage -- "Scheduled" --> SaveScheduled["DB: status=SCHEDULED"]
    SaveScheduled -- "Handled by Schedulers" --> ActivationScheduler & PrecomputationScheduler
    
    %% --- PRECOMPUTATION & ACTIVATION FLOW ---
    AsyncPrecomputation -- "Saves targets, publishes PRECOMPUTED event,<br/>& sets status=READY" --> Postgres
    Postgres -- "status=READY" --> ActivationScheduler
    
    ActivationScheduler -- "Polls for READY or<br/>due SCHEDULED broadcasts" --> Postgres
    ActivationScheduler --> SaveActiveAndOutboxSingle
    
    %% --- CONVERGENCE & PUBLISHING ---
    SaveActiveAndOutboxSingle --> Postgres
    SaveActiveAndOutboxBatch --> Postgres
    Postgres -- "Events wait in 'outbox_events'" --> OutboxPoller
    OutboxPoller -- "Polls & Locks Events" --> Postgres
    OutboxPoller -- "Publishes Events" --> Kafka

    %% --- DELIVERY ---
    Kafka --> OrchestratorConsumer
    OrchestratorConsumer -- "Processes event, may PUT to Geode" --> Geode
    Geode -- "CQ invokes Listener" --> WorkerCqListener
    WorkerCqListener --> SseService
    SseService --> User