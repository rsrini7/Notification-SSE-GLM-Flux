sequenceDiagram
    participant AdminSvc as Admin Service <br/> (LifecycleService)
    participant KafkaActionsOrchestration as Kafka <br/> (broadcast-actions-orchestration)
    participant Leader as User Service <br/> (Orchestrator)
    participant DB as DB (broadcast_user_targets)
    participant KafkaUserActions as Kafka <br/> (broadcast-user-actions)
    participant Worker as User Service <br/> (Consumer)

    AdminSvc->>+KafkaActionsOrchestration: 1- Publishes ONE orchestration event (e.g., CANCELLED)
    KafkaActionsOrchestration-->>-AdminSvc: 

    KafkaActionsOrchestration->>+Leader: 2- Leader consumer receives event
    Leader->>+DB: 3- Reads pre-computed user list
    DB-->>-Leader: Returns 400k user IDs
    
    loop For each user
        Leader->>+KafkaUserActions: 4- "Scatters" user-specific CANCELLED events
    end
    KafkaUserActions-->>-Leader: 
    Leader-->>-KafkaActionsOrchestration: 5- Acknowledges orchestration event
    
    KafkaUserActions->>+Worker: 6- Worker pods consume events in parallel
    Note over Worker: 7- Pushes MESSAGE_REMOVED via SSE...
    Worker-->>-KafkaUserActions: 8- Acknowledges message