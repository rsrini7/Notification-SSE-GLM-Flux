sequenceDiagram
    participant User as User (via CLI)
    participant RedisCLI as redis-cli
    participant RedisServer as Redis Server

    User->>RedisCLI: KEYS *
    RedisCLI->>RedisServer: Executes KEYS *
    RedisServer-->>RedisCLI: Returns list of all keys
    RedisCLI-->>User: Displays keys 1-10

    Note over User, RedisServer: The user now inspects each key type and uses the correct command.

    User->>RedisCLI: HGETALL "user-conn:user-001"
    Note right of User: For a Hash, use HGETALL to get all fields and values.
    RedisCLI->>RedisServer: Executes HGETALL "user-conn:user-001"
    RedisServer-->>RedisCLI: Returns connection info (field-value pairs)
    RedisCLI-->>User: Displays connection details

    User->>RedisCLI: SMEMBERS "online-users"
    Note right of User: For a Set, use SMEMBERS to get all members.
    RedisCLI->>RedisServer: Executes SMEMBERS "online-users"
    RedisServer-->>RedisCLI: Returns list of online user IDs
    RedisCLI-->>User: Displays members

    User->>RedisCLI: ZRANGE "active-connections-by-heartbeat" 0 -1 WITHSCORES
    Note right of User: For a Sorted Set, use ZRANGE to get members and their scores.
    RedisCLI->>RedisServer: Executes ZRANGE "active-connections-by-heartbeat" 0 -1 WITHSCORES
    RedisServer-->>RedisCLI: Returns connection IDs with heartbeat timestamps
    RedisCLI-->>User: Displays members and scores

    User->>RedisCLI: GET "broadcast-content:1"
    Note right of User: For a String, GET is the correct command.
    RedisCLI->>RedisServer: Executes GET "broadcast-content:1"
    RedisServer-->>RedisCLI: Returns JSON string of broadcast content
    RedisCLI-->>User: Displays content