classDiagram
    direction TB

    namespace dto {
        class MessageDeliveryEvent {
            <<DTO>>
            String eventId
            Long broadcastId
            String userId
            String eventType
            OffsetDateTime timestamp
            String message
            String errorDetails
            boolean isFireAndForget
        }
        class ErrorResponse {
            <<DTO>>
            OffsetDateTime timestamp
            int status
            String error
            String message
            String path
        }
        class GeodeSsePayload {
            <<DTO>>
            String targetClusterPodName
            MessageDeliveryEvent event
        }
    }

    namespace admin {
        class BroadcastRequest {
            <<DTO>>
            String senderId
            String senderName
            String content
            String targetType
            List~String~ targetIds
            String priority
            String category
            OffsetDateTime scheduledAt
            OffsetDateTime expiresAt
            boolean isImmediate
            boolean isFireAndForget
        }
        class BroadcastResponse {
            <<DTO>>
            Long id
            String content
            String status
            OffsetDateTime createdAt
            OffsetDateTime scheduledAt
            Integer totalTargeted
            Integer totalDelivered
            Integer totalRead
        }
        class DltMessage {
            <<DTO>>
            String id
            Long broadcastId
            String originalKey
            String originalTopic
            int originalPartition
            long originalOffset
            String exceptionMessage
            OffsetDateTime failedAt
            String originalMessagePayload
        }
        class RedriveAllResult {
            <<DTO>>
            int totalMessages
            int successCount
            int failureCount
            List~RedriveFailureDetail~ failures
        }
        class RedriveFailureDetail {
            <<DTO>>
            String dltMessageId
            String reason
        }
    }

    namespace user {
        class UserBroadcastResponse {
            <<DTO>>
            Long broadcastId
            String userId
            String content
            String readStatus
            String deliveryStatus
            String priority
            String category
            OffsetDateTime broadcastCreatedAt
        }
        class MessageReadRequest {
            <<DTO>>
            String userId
            Long broadcastId
        }
    }

    namespace cache {
        class UserConnectionInfo {
            <<DTO>>
            String userId
            String connectionId
            String podName
            String clusterName
            OffsetDateTime connectedAt
        }
        class ConnectionHeartbeat {
            <<DTO>>
            String userId
            long lastHeartbeatTimestamp
        }
        class UserMessageInbox {
            <<DTO>>
            Long messageId
            Long broadcastId
            String deliveryStatus
            String readStatus
            OffsetDateTime createdAt
        }
    }
    
    RedriveAllResult "1" *-- "1" RedriveFailureDetail : contains
    GeodeSsePayload o-- "1" MessageDeliveryEvent : contains