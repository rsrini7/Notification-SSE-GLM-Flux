sequenceDiagram
    participant UserSvc as User Service <br/> (MessageService)
    participant DB as DB (Outbox Table)
    participant OutboxPoller as Outbox Poller
    participant KafkaUserActions as Kafka <br/> (broadcast-user-actions)
    participant Worker as User Service <br/> (Consumer)
    participant SpringKafka as Spring Kafka Error Handler
    participant KafkaDLT as Kafka (-dlt Topic)
    participant DLTConsumer as Admin Service <br/> (DltKafkaConsumerService)

    Note over UserSvc: User marks a message as read...
    UserSvc->>+DB: 1- Writes user-specific READ event to Outbox
    DB-->>-UserSvc: 

    OutboxPoller->>+KafkaUserActions: 2- Polls and publishes READ event
    KafkaUserActions-->>-OutboxPoller: 

    KafkaUserActions->>+Worker: 3- Consumes READ event
    
    alt Message Processed Successfully
        Note over Worker: 4a- Processes event (e.g., sends READ_RECEIPT via SSE)
        Worker-->>-KafkaUserActions: 5a- Acknowledges message
    else Message Processing Fails
        Worker-->>+SpringKafka: 4b- Throws exception after retries
        SpringKafka->>+KafkaDLT: 5b- Publishes failed message to DLT
        KafkaDLT-->>-SpringKafka: 
        SpringKafka-->>-Worker: Acknowledges original message
    end
    
    KafkaDLT->>+DLTConsumer: 6b- DLT consumer (in Admin Service) receives
    DLTConsumer->>+DB: 7b- Saves failed message for admin review
    DB-->>-DLTConsumer: 
    DLTConsumer-->>-KafkaDLT: 8b- Acknowledges DLT message