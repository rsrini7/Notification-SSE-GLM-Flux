// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Broadcast {
  id            String   @id @default(cuid())
  senderId      String
  senderName    String
  content       String
  targetType    String
  targetIds     String   // JSON array stored as string
  priority      String
  category      String
  createdAt     DateTime @default(now())
  status        String   @default("ACTIVE")
  totalTargeted Int      @default(0)
  totalDelivered Int    @default(0)
  totalRead     Int      @default(0)
  startTime     DateTime @default(now()) // When broadcast becomes active
  endTime       DateTime? // When broadcast expires (null for no expiration)
  isImmediate   Boolean  @default(true) // true for immediate publish, false for scheduled
  deliveries    BroadcastDelivery[]
}

model BroadcastDelivery {
  id           String   @id @default(cuid())
  broadcastId  String
  userId       String
  deliveredAt  DateTime
  readAt       DateTime?
  status       String   @default("DELIVERED")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  broadcast    Broadcast @relation(fields: [broadcastId], references: [id], onDelete: Cascade)
  
  @@unique([broadcastId, userId])
}