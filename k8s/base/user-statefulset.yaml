# file: k8s/base/user-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: broadcast-user-service
  namespace: broadcast-system
spec:
  serviceName: "broadcast-user-service"
  replicas: 3
  selector:
    matchLabels:
      app: broadcast-user-service
  template:
    metadata:
      labels:
        app: broadcast-user-service
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8082"
        prometheus.io/path: "/api/actuator/prometheus"
    spec:
      serviceAccountName: broadcast-service-account
      terminationGracePeriodSeconds: 60
      containers:
      - name: broadcast-user-service
        image: broadcast-user-service:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8082
          name: api
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CLUSTER_NAME
          value: "cluster-a"
        - name: JAVA_OPTS
          value: "-Xms512m -Xmx1g -XX:+UseG1GC -XX:MaxGCPauseMillis=200"
        - name: SPRING_PROFILES_ACTIVE
          value: "dev-pg"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8082
            scheme: HTTPS
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8082
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10